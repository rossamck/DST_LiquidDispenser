name: Electron Windows Build

on:
  push:
    paths:
      - 'package.json'

jobs:
  build:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup Node.js environment
      uses: actions/setup-node@v2.4.0
      with:
        node-version: 14

    - name: Cache node modules
      uses: actions/cache@v2
      with:
        path: ~/.npm
        key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.OS }}-node-

    - name: Install dependencies
      run: npm install


    - name: Build
      run: |
        npm run dist --win
      
    - name: Check for version change
      id: check-version
      run: |
        echo "::set-output name=changed::$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep '^package\.json' || echo '')"
    
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      if: steps.check-version.outputs.changed != ''
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      if: steps.check-version.outputs.changed != ''
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/LiquidDispenser Setup ${{ steps.get_version.outputs.VERSION }}.exe
        asset_name: LiquidDispenser Setup ${{ steps.get_version.outputs.VERSION }}.exe
        asset_content_type: application/x-msdownload
