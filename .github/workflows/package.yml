name: Electron Build and Package

on:
  push:
    paths:
      - 'package.json'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macOS-latest, ubuntu-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 18.15.0
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build Electron app
        run: npm run build

      - name: Package Electron app
        run: npm run dist
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Archive production artifacts
        uses: actions/upload-artifact@v2
        with:
          name: dist
          path: dist/

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist/

      - name: Get version
        id: pkg
        run: echo "::set-output name=version::$(node -p "require('./package.json').version")"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          tag_name: v${{ steps.pkg.outputs.version }}
          release_name: Release v${{ steps.pkg.outputs.version }}
          draft: false
          prerelease: false

      - name: Upload Release Asset 
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/LiquidDispenser-${{ steps.pkg.outputs.version }}-linux-x86_64.AppImage
            dist/LiquidDispenser-${{ steps.pkg.outputs.version }}-mac-x64.dmg
            dist/LiquidDispenser-${{ steps.pkg.outputs.version }}-mac-x64.dmg.blockmap
            dist/LiquidDispenser-${{ steps.pkg.outputs.version }}-win-x64.exe
            dist/LiquidDispenser-${{ steps.pkg.outputs.version }}-win-x64.exe.blockmap
            dist/latest.yml
            dist/latest-linux.yml
            dist/latest-mac.yml
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
